#include <stdio.h>
#include <cmath> 
#include <GL/glut.h>

int w = 500, h = 300; // Window size

void drawFlag();
void floodFill(int x, int y, float r, float g, float b);
void setPixel(int x, int y, float r, float g, float b);
int getPixel(int x, int y);

void drawFlag() {
    glClearColor(1, 1, 1, 1);
    glClear(GL_COLOR_BUFFER_BIT);

    // Proportion of length to width of the flag is 10:6
    int flag_length = w;
    int flag_width = flag_length * 6 / 10;

    // Green rectangle (flag background)
    glColor3f(0, 0.5, 0); 
    glBegin(GL_POLYGON);
    glVertex2i(0, 0);
    glVertex2i(flag_length, 0);
    glVertex2i(flag_length, flag_width);
    glVertex2i(0, flag_width);
    glEnd();

    // Red circle (flag emblem)
    float radius = flag_length / 5.0; // One-fifth of the length of the flag
    float cx = flag_length * 9.0 / 20.0; // Center at nine-twentieths of the length
    float cy = flag_width / 2.0; // Center on the middle of the width
    int num_segments = 100;

    glColor3f(1, 0, 0); 
    glBegin(GL_POLYGON);
    for (int i = 0; i < num_segments; i++) {
        float theta = 2.0f * 3.1415926f * float(i) / float(num_segments);
        float dx = radius * cos(theta);
        float dy = radius * sin(theta);
        glVertex2f(cx + dx, cy + dy);
    }
    glEnd();

    glFlush();
}

void floodFill(int x, int y, float r, float g, float b) {
    if (x < 0 || x >= w || y < 0 || y >= h)
        return;

    float pixels[3];
    glReadPixels(x, y, 1, 1, GL_RGB, GL_FLOAT, &pixels);
    if (pixels[0] == r && pixels[1] == g && pixels[2] == b)
        return;

    setPixel(x, y, r, g, b);

    floodFill(x + 1, y, r, g, b);
    floodFill(x - 1, y, r, g, b);
    floodFill(x, y + 1, r, g, b);
    floodFill(x, y - 1, r, g, b);
}

void setPixel(int x, int y, float r, float g, float b) {
    glColor3f(r, g, b);
    glBegin(GL_POINTS);
    glVertex2i(x, y);
    glEnd();
    glFlush(); // Ensure the pixel is drawn immediately
}

int getPixel(int x, int y) {
    float pixels[3];
    glReadPixels(x, y, 1, 1, GL_RGB, GL_FLOAT, &pixels);
    if (pixels[0] == 1 && pixels[1] == 1 && pixels[2] == 1)
        return 1;
    return 0;
}

void mouse(int button, int state, int x, int y) {
    if (button == GLUT_LEFT_BUTTON && state == GLUT_DOWN) {
        y = h - y; // Adjust y-coordinate

        // Proportion of length to width of the flag is 10:6
        int flag_length = w;
        int flag_width = flag_length * 6 / 10;

        if (x >= 0 && x <= flag_length && y >= 0 && y <= flag_width) {
            floodFill(x, y, 0, 0.5, 0); // Green color for the background
        } else if ((x - flag_length * 9.0 / 20.0) * (x - flag_length * 9.0 / 20.0) +
                   (y - flag_width / 2.0) * (y - flag_width / 2.0) <=
                   (flag_length / 5.0) * (flag_length / 5.0)) {
            floodFill(x, y, 1, 0, 0); // Red color for the circle
        }
    }
}

int main(int argc, char **argv) {
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(w, h);
    glutCreateWindow("Bangladesh National Flag");
    glutDisplayFunc(drawFlag);
    glutMouseFunc(mouse);
    gluOrtho2D(0, w, 0, h);
    glutMainLoop();
    return 0;
}
